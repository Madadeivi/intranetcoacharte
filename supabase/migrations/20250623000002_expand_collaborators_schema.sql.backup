-- Migración: Expandir esquema de colaboradores con todos los campos del CSV
-- Fecha: 2025-06-23
-- Descripción: Agregar todos los campos necesarios para almacenar la información completa de colaboradores

-- Agregar columnas adicionales a la tabla collaborators
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS record_id VARCHAR(255); -- Record Id de Zoho
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS status VARCHAR(100); -- Estatus
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS internal_registry VARCHAR(50); -- Registro interno (COA-XX)
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS owner_id VARCHAR(255); -- Colaborador Owner.id
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS owner_name VARCHAR(255); -- Colaborador Owner
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS created_time TIMESTAMPTZ; -- Created Time
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS modified_time TIMESTAMPTZ; -- Modified Time
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS last_activity_time TIMESTAMPTZ; -- Last Activity Time
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS currency VARCHAR(10) DEFAULT 'MXN'; -- Currency
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS exchange_rate DECIMAL(15,9) DEFAULT 1.0; -- Exchange Rate
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS tags TEXT; -- Tag
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS unsubscribed_mode BOOLEAN DEFAULT false; -- Unsubscribed Mode
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS unsubscribed_time TIMESTAMPTZ; -- Unsubscribed Time

-- Datos personales básicos
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS title VARCHAR(255); -- Titulo/Posición
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS curp VARCHAR(18); -- CURP
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS rfc VARCHAR(13); -- RFC
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS nss VARCHAR(20); -- NSS (Número de Seguridad Social)
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS bank VARCHAR(100); -- Banco
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS birth_date DATE; -- Fecha de nacimiento
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS gender VARCHAR(20); -- Sexo
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS nationality VARCHAR(100); -- Nacionalidad
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS civil_status VARCHAR(50); -- Estado civil
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS address TEXT; -- Dirección
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS personal_email VARCHAR(255); -- Correo electrónico personal
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS edenred_email VARCHAR(255); -- Correo electrónico edenred
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS mobile_phone VARCHAR(50); -- Celular
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS hire_date DATE; -- Fecha de ingreso

-- Contactos de emergencia
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS emergency_contact_primary_name VARCHAR(255); -- Nombre contacto de emergencia principal
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS emergency_contact_primary_phone VARCHAR(50); -- Teléfono contacto de emergencia
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS emergency_contact_primary_relationship VARCHAR(100); -- Parentesco principal
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS emergency_contact_secondary_name VARCHAR(255); -- Nombre contacto de emergencia secundario
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS emergency_contact_secondary_phone VARCHAR(50); -- Teléfono contacto de emergencia secundario
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS emergency_contact_secondary_relationship VARCHAR(100); -- Parentesco secundario

-- Información médica
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS blood_type VARCHAR(10); -- Tipo de sangre
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS allergies TEXT; -- Alergias

-- Información bancaria y fiscal
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS card_number VARCHAR(50); -- No. de tarjeta
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS identifier_number VARCHAR(50); -- No. identificador
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS bank_card_number VARCHAR(50); -- No. de tarjeta bancaria
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS clabe VARCHAR(18); -- CLABE

-- Información laboral específica
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS work_area VARCHAR(255); -- Área de trabajo
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS work_area_specify TEXT; -- Especifique
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS clients TEXT; -- Clientes

-- Vacaciones
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS available_vacation_days INTEGER DEFAULT 0; -- Vacaciones disponibles
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS taken_vacation_days INTEGER DEFAULT 0; -- Vacaciones tomadas
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS vacation_balance INTEGER DEFAULT 0; -- Vacaciones disponibles. (campo duplicado en CSV)

-- Campos adicionales
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS comments TEXT; -- Comentarios
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS additional_comments TEXT; -- Comentarios adicionales
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS locked BOOLEAN DEFAULT false; -- Locked
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS intranet_password VARCHAR(255); -- Password Intranet
ALTER TABLE public.collaborators ADD COLUMN IF NOT EXISTS custom_password_set BOOLEAN DEFAULT false; -- Password Personalizada Establecida

-- Campos calculados y generados
-- Actualizar el campo full_name para usar el nombre completo del CSV si está disponible
ALTER TABLE public.collaborators DROP COLUMN IF EXISTS full_name;
ALTER TABLE public.collaborators ADD COLUMN full_name VARCHAR(255);

-- Crear índices adicionales para campos importantes
CREATE INDEX IF NOT EXISTS idx_collaborators_record_id ON public.collaborators(record_id);
CREATE INDEX IF NOT EXISTS idx_collaborators_internal_registry ON public.collaborators(internal_registry);
CREATE INDEX IF NOT EXISTS idx_collaborators_curp ON public.collaborators(curp);
CREATE INDEX IF NOT EXISTS idx_collaborators_rfc ON public.collaborators(rfc);
CREATE INDEX IF NOT EXISTS idx_collaborators_nss ON public.collaborators(nss);
CREATE INDEX IF NOT EXISTS idx_collaborators_status ON public.collaborators(status);
CREATE INDEX IF NOT EXISTS idx_collaborators_work_area ON public.collaborators(work_area);
CREATE INDEX IF NOT EXISTS idx_collaborators_hire_date ON public.collaborators(hire_date);
CREATE INDEX IF NOT EXISTS idx_collaborators_personal_email ON public.collaborators(personal_email);

-- Agregar constraints para campos únicos importantes
ALTER TABLE public.collaborators ADD CONSTRAINT unique_curp UNIQUE(curp);
ALTER TABLE public.collaborators ADD CONSTRAINT unique_rfc UNIQUE(rfc);
ALTER TABLE public.collaborators ADD CONSTRAINT unique_nss UNIQUE(nss);
ALTER TABLE public.collaborators ADD CONSTRAINT unique_internal_registry UNIQUE(internal_registry);

-- Agregar constraints de validación
ALTER TABLE public.collaborators ADD CONSTRAINT check_curp_length CHECK (curp IS NULL OR LENGTH(curp) = 18);
ALTER TABLE public.collaborators ADD CONSTRAINT check_rfc_length CHECK (rfc IS NULL OR LENGTH(rfc) BETWEEN 12 AND 13);
ALTER TABLE public.collaborators ADD CONSTRAINT check_clabe_length CHECK (clabe IS NULL OR LENGTH(clabe) = 18);
ALTER TABLE public.collaborators ADD CONSTRAINT check_gender_values CHECK (gender IS NULL OR gender IN ('Masculino', 'Femenino', 'Otro'));
ALTER TABLE public.collaborators ADD CONSTRAINT check_vacation_days_positive CHECK (available_vacation_days >= 0 AND taken_vacation_days >= 0);

-- Función para calcular el balance de vacaciones
CREATE OR REPLACE FUNCTION calculate_vacation_balance()
RETURNS TRIGGER AS $$
BEGIN
    NEW.vacation_balance = NEW.available_vacation_days - NEW.taken_vacation_days;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger para calcular automáticamente el balance de vacaciones
CREATE TRIGGER calculate_vacation_balance_trigger
    BEFORE INSERT OR UPDATE OF available_vacation_days, taken_vacation_days
    ON public.collaborators
    FOR EACH ROW
    EXECUTE FUNCTION calculate_vacation_balance();

-- Función para validar formato de CURP
CREATE OR REPLACE FUNCTION validate_curp(curp_value TEXT)
RETURNS BOOLEAN AS $$
BEGIN
    -- Validación básica de formato CURP (4 letras, 6 números, 6 caracteres adicionales, 1 dígito)
    RETURN curp_value ~ '^[A-Z]{4}[0-9]{6}[HM][A-Z]{5}[0-9]{2}$';
END;
$$ LANGUAGE plpgsql;

-- Función para validar formato de RFC
CREATE OR REPLACE FUNCTION validate_rfc(rfc_value TEXT)
RETURNS BOOLEAN AS $$
BEGIN
    -- Validación básica de formato RFC
    -- Persona física: 4 letras + 6 dígitos + 3 caracteres (total 13)
    -- Persona moral: 3 letras + 6 dígitos + 3 caracteres (total 12)
    RETURN rfc_value ~ '^[A-Z]{3,4}[0-9]{6}[A-Z0-9]{3}$';
END;
$$ LANGUAGE plpgsql;

-- Comentarios para documentar las nuevas columnas
COMMENT ON COLUMN public.collaborators.record_id IS 'ID único del registro en Zoho CRM';
COMMENT ON COLUMN public.collaborators.internal_registry IS 'Código interno de registro (COA-XX)';
COMMENT ON COLUMN public.collaborators.curp IS 'Clave Única de Registro de Población';
COMMENT ON COLUMN public.collaborators.rfc IS 'Registro Federal de Contribuyentes';
COMMENT ON COLUMN public.collaborators.nss IS 'Número de Seguridad Social';
COMMENT ON COLUMN public.collaborators.clabe IS 'Clave Bancaria Estandarizada';
COMMENT ON COLUMN public.collaborators.emergency_contact_primary_name IS 'Nombre del contacto de emergencia principal';
COMMENT ON COLUMN public.collaborators.emergency_contact_secondary_name IS 'Nombre del contacto de emergencia secundario';
COMMENT ON COLUMN public.collaborators.blood_type IS 'Tipo de sangre (A+, A-, B+, B-, AB+, AB-, O+, O-)';
COMMENT ON COLUMN public.collaborators.available_vacation_days IS 'Días de vacaciones disponibles en el año actual';
COMMENT ON COLUMN public.collaborators.taken_vacation_days IS 'Días de vacaciones tomados en el año actual';
COMMENT ON COLUMN public.collaborators.vacation_balance IS 'Balance de vacaciones (calculado automáticamente)';

-- Crear vista para información básica de colaboradores (sin campos sensibles)
CREATE OR REPLACE VIEW public.collaborators_basic AS
SELECT 
    id,
    zoho_id,
    email,
    full_name,
    first_name,
    last_name,
    title,
    department,
    position,
    work_area,
    phone,
    mobile_phone,
    hire_date,
    active,
    status,
    internal_registry,
    vacation_balance,
    created_at,
    updated_at
FROM public.collaborators;

-- Crear vista para información de contacto de emergencia
CREATE OR REPLACE VIEW public.collaborators_emergency_contacts AS
SELECT 
    id,
    full_name,
    emergency_contact_primary_name,
    emergency_contact_primary_phone,
    emergency_contact_primary_relationship,
    emergency_contact_secondary_name,
    emergency_contact_secondary_phone,
    emergency_contact_secondary_relationship
FROM public.collaborators
WHERE active = true;

-- Grants para las vistas
GRANT SELECT ON public.collaborators_basic TO authenticated;
GRANT SELECT ON public.collaborators_emergency_contacts TO authenticated;

-- Función para obtener información del colaborador por email
CREATE OR REPLACE FUNCTION get_collaborator_by_email(collaborator_email TEXT)
RETURNS TABLE (
    id UUID,
    zoho_id VARCHAR,
    email VARCHAR,
    full_name VARCHAR,
    title VARCHAR,
    department VARCHAR,
    work_area VARCHAR,
    status VARCHAR,
    active BOOLEAN
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        c.id,
        c.zoho_id,
        c.email,
        c.full_name,
        c.title,
        c.department,
        c.work_area,
        c.status,
        c.active
    FROM public.collaborators c
    WHERE c.email = collaborator_email
    AND c.active = true;
END;
$$ LANGUAGE plpgsql;

-- Función para obtener estadísticas de vacaciones por departamento
CREATE OR REPLACE FUNCTION get_vacation_stats_by_department()
RETURNS TABLE (
    department VARCHAR,
    total_collaborators BIGINT,
    avg_available_days NUMERIC,
    avg_taken_days NUMERIC,
    avg_balance NUMERIC
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        c.department,
        COUNT(*) as total_collaborators,
        AVG(c.available_vacation_days) as avg_available_days,
        AVG(c.taken_vacation_days) as avg_taken_days,
        AVG(c.vacation_balance) as avg_balance
    FROM public.collaborators c
    WHERE c.active = true
    GROUP BY c.department
    ORDER BY c.department;
END;
$$ LANGUAGE plpgsql;
